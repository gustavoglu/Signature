@page "/nota-fiscal/comprovante/photo"
@using Signature.Shared.Interfaces

@inject NavigationManager NavigationManager;
@inject NotaFiscalState NotaFiscalState;
@inject ICameraService CameraService;

<PageTitle>@pageTitle</PageTitle>
    <SectionContent SectionName="page-title">@pageTitle</SectionContent>

    <div style="height:90vh;">
        <div style="height:100%; display:flex; flex-direction:column; align-items:center; justify-content: space-between;">
            <img src="@PhotoBase64Src" style="height:50%;width:100%;" />

            <div style="display:flex;flex-direction:column; gap:10px;width:100%;">
                <button class="button is-info is-fullwidth" @onclick="TakePhotoAndGenerateBase64">
                    <i class="fa-solid fa-camera mr-3"></i> Tirar outra foto
                </button>
                <button class="button is-link is-fullwidthd">Avançar</button>
            </div>
        </div>
    </div>
    @code {

    private string pageTitle = "Comprovante / Foto";
    public string? PhotoBase64 { get; set; }
    public string? PhotoBase64Src { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await TakePhotoAndGenerateBase64();
    }

    public void NextOnClick()
    {
        if (string.IsNullOrEmpty(PhotoBase64) || string.IsNullOrEmpty(PhotoBase64Src)) return;

        NotaFiscalState.SetComprovanteBase64(PhotoBase64);
        NotaFiscalState.SetComprovanteBase64Src(PhotoBase64Src);
    }

    public async Task TakePhotoAndGenerateBase64()
    {
        var result = await CameraService.TakePhotoAndGenerateBase64();
        if (result is null)
        {
            NavigationManager.NavigateTo("nota-fiscal/comprovante");
            return;
        }

        PhotoBase64 = result;
        PhotoBase64Src = $"data:image/jpeg;base64,{PhotoBase64}";
    }
}
